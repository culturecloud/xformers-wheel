name: Xformers Compiler

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}
  
env:
  # you need at least cuda 5.0 for some of the stuff compiled here.
  TORCH_CUDA_ARCH_LIST: "5.0+PTX 5.2+PTX 6.0 6.1 7.0 7.5 8.0 8.6"
  FORCE_CUDA: 1
  MAX_JOBS: 1 # will crash otherwise
  DISTUTILS_USE_SDK: 1 # otherwise distutils will complain on windows about multiple versions of msvc
  XFORMERS_PACKAGE_FROM: "wheel-${{ github.ref_name }}"

jobs:
  linux-compiler:
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.10"
          - "3.9"
          - "3.8"
        config:
          - cuda_version: "11.7.1"
            pip_index: https://download.pytorch.org/whl/nightly/cu117
            cuda_run_file: https://developer.download.nvidia.com/compute/cuda/11.7.1/local_installers/cuda_11.7.1_515.65.01_linux.run
          - cuda_version: "11.6.2"
            pip_index: https://download.pytorch.org/whl/nightly/cu116
            cuda_run_file: https://developer.download.nvidia.com/compute/cuda/11.6.2/local_installers/cuda_11.6.2_510.47.03_linux.run
    runs-on: ubuntu-22.04
    container: quay.io/pypa/manylinux2014_x86_64
    timeout-minutes: 360
    defaults:
      run:
        shell: bash
    steps:
      # - uses: actions/checkout@v3
      - name: go to xformers
        uses: actions/checkout@v3
        with:
          repository: facebookresearch/xformers
          submodules: recursive
          ref: main
          path: "."
          fetch-depth: 0
      - name: install cuda
        run: >
          yum install wget git prename -y &&
          wget -q "${{ matrix.config.cuda_run_file }}" -O cuda.run &&
          sh ./cuda.run --silent --toolkit &&
          rm ./cuda.run
      - name: Define version
        run: |
          set -Eeuo pipefail
          git config --global --add safe.directory "*"
          python${{matrix.python}} -m pip install packaging
          version=`python${{matrix.python}} packaging/compute_wheel_version.py`
          echo "BUILD_VERSION=$version" >> ${GITHUB_ENV}
          cat ${GITHUB_ENV}
      - name: Build
        run: |
          python${{matrix.python}} -m pip install wheel setuptools
          python${{matrix.python}} -m pip install --pre torch torchvision torchaudio triton --extra-index-url ${{ matrix.config.pip_index }} --force
          python${{matrix.python}} -m pip install -r requirements.txt
          python${{matrix.python}} -m pip install -U accelerate==0.15.0
          python${{matrix.python}} setup.py bdist_wheel -d dist/ -k --plat-name manylinux2014_x86_64
      - name: get vars
        id: get-vars
        run: |
          echo "datetime=$(/bin/date -u +"%Y/%m/%d")" >>$GITHUB_OUTPUT
          echo "releasebody=$(echo "for use with $(pip freeze | grep torch)") >> $GITHUB_OUTPUT
        shell: bash
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/*.whl
          tag: xformers-cu${{matrix.config.cuda_version}}-${{steps.get-vars.outputs.datetime}}
          body: |
            ${{ steps.get-vars.outputs.releasebody }}
          file_glob: true
          overwrite: true
          prerelease: true
